plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.10'
}

group = 'de.fuballer'
version = '0.9'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'papermc-repo'
        url = uri('https://repo.papermc.io/repository/maven-public/')
    }
    maven {
        name = 'protocollib-repo'
        url = "https://repo.dmulloy2.net/repository/public/"
    }
}

tasks.register('fatJar', Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { zipTree(it) }
    }
    with jar
}

dependencies {
    implementation 'org.spigotmc:spigot-api:1.21-R0.1-SNAPSHOT'

    implementation platform('com.intellectualsites.bom:bom-1.18.x:1.28')
    compileOnly 'com.fastasyncworldedit:FastAsyncWorldEdit-Core:2.9.2'
    compileOnly 'com.fastasyncworldedit:FastAsyncWorldEdit-Bukkit:2.9.2'
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.3.0-SNAPSHOT'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.1'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.9.10'
    implementation 'org.reflections:reflections:0.10.2'
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}